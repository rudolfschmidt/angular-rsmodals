// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  angular.module('rsmodals').directive('modalOpen', function() {
    return {
      scope: {
        data: '=modalOpen'
      },
      link: function(scope, elm, attrs) {
        return elm.click(function() {
          return scope.$apply(function() {
            return scope.data = {
              show: true
            };
          });
        });
      }
    };
  }).directive('modalShow', function() {
    return {
      scope: {
        data: '=modalShow',
        body: '@modalBody',
        container: '@modalContainer'
      },
      controller: function($scope) {
        this.close = function() {
          return delete $scope.data;
        };
        return void 0;
      },
      link: function(scope, elm, attrs, ctrl) {
        var body, container;
        body = scope.body || 'open-modal';
        container = scope.container || 'section';
        elm.hide();
        scope.$watch('data.show', function(show) {
          if (show) {
            angular.element('body').addClass(body);
            angular.element('[modal-show]').hide();
            elm.show();
            elm.find(container).hide().slideDown('slow');
            return;
          }
          return elm.find(container).slideUp('slow', function() {
            elm.hide();
            if (!angular.element('[modal-show]:visible').length) {
              return angular.element('body').removeClass(body);
            }
          });
        });
        elm.click(function() {
          return scope.$apply(function() {
            return ctrl.close();
          });
        });
        return elm.find(container).click(function(e) {
          return e.stopPropagation();
        });
      }
    };
  }).directive('modalClose', function() {
    return {
      require: '^modalShow',
      link: function(scope, elm, attrs, ctrl) {
        return elm.click(function() {
          return scope.$apply(function() {
            return ctrl.close();
          });
        });
      }
    };
  });

}).call(this);
